[{"name":"app.R","content":"# A lightweight ShinyApp for coding of text data for qualitative analysis\n# QualCA (pronounced like Quokka; not yet final)\n# Written by William Ngiam\n# Started on Sept 15 2024\n# Version 0.1.5 (Jan 16 2024)\n#\n# Motivated by the ANTIQUES project\n#\n# Wishlist\n# Take in various corpus input files\n# Edit text viewer to show all relevant information\n# Add codebook, codes, extracts - have all linked and viewable.\n# Apply specific colours for the code\n# Collaborative coding <- maybe a google sheet that contains code/extracts...\n# Floating menus?\n# Dealing with line breaks\n# Audit trail page - running commentary/notes\n# Automatic sending to OSF project\n# \"Stats\" tab <- Number of extracts, number of documents coded\n# \n# Glossary\n# Corpus: The body of text to be qualitatively analysed\n# Document: Each item that makes up the corpus\n# Extract: The harvested section of text that is coded\n#\n# --- #\n\n# Load required packages\nlibrary(tools)\n#library(pdftools)\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(shinyalert)\nlibrary(shinyjs)\nlibrary(DT) # for data presentation purposes\nlibrary(tibble)\nlibrary(dplyr) # for data wrangling\nlibrary(readr)\nlibrary(stringr) # for handling strings\nlibrary(markdown)\nlibrary(sortable) # For list sorting\n#library(officer) # Uncomment if want to load in word documents locally\n\n# Workaround for Chromium Issue 468227\n# Copied from https://shinylive.io/r/examples/#r-file-download\ndownloadButton <- function(...) {\n  tag <- shiny::downloadButton(...)\n  tag$attribs$download <- NULL\n  tag\n}\n\n### UI ###\nui <- dashboardPage(\n  dashboardHeader(title = \"quokka - a qualitative coding app\",\n                  titleWidth = 350),\n  dashboardSidebar(width = 350,\n                   fluidPage(HTML(\"<h3>Upload Files<\/h3>\")),\n                   fileInput(\"corpusFile\", \"Load Corpus\",\n                             accept = c(\"text/csv\", \"text/comma-separated-values,text/plain\", \".csv\", \".pdf\", \".docx\")), # Upload the corpus of documents to-be-analysed\n                   uiOutput(\"documentTextSelector\"),\n                   fileInput(\"codebookFile\", \"Load Codebook\",\n                             accept = c(\"text/csv\", \"text/comma-separated-values,text/plain\", \".csv\")), # Upload any existing codebook\n                   uiOutput(\"codebookSelector\"),\n                   fluidPage(HTML(\"<h3>Download Codebook<\/h3>\")),\n                   fluidPage(downloadButton(\"downloadData\",\n                                            label = \"Download Codebook\",\n                                            style = \"color: black\")),\n                   fluidPage(HTML(\"<br><h3>Pages<\/h3>\")),\n                   sidebarMenu(\n                     id = \"sbMenu\",\n                     menuItem(\"Home\", tabName = \"home\", icon = icon(\"home\")),\n                     menuItem(\"Coding\", tabName = \"coder\", icon = icon(\"highlighter\")),\n                     menuItem(\"Reviewing\", tabName = \"reviewer\", icon = icon(\"magnifying-glass\")),\n                     menuItem(\"Sorting\", tabName = \"themes\", icon = icon(\"layer-group\"))\n                   ),\n                   fluidPage(HTML(\"<br>Created by William Ngiam\"))\n  ),\n  dashboardBody(\n    tabItems(\n      # The home tab\n      tabItem(tabName = \"home\",\n              useShinyjs(), #Initialize shinyjs\n              fluidPage(\n                includeHTML(\"home_text.html\"))\n      ),\n      # The coding tab\n      tabItem(tabName = \"coder\",\n              useShinyjs(),  # Initialize shinyjs\n              fluidRow(\n                box(title = \"Document Viewer\", width = 6, solidHeader = TRUE, status = \"primary\",\n                    fluidPage(\n                      fluidRow(\n                        column(width = 5,\n                               numericInput(inputId = \"documentID_viewer\",\n                                            label = \"Document #\",\n                                            value = \"currentDocumentID\")),\n                        column(width = 5,\n                               offset = 1,\n                               HTML(\"<strong>Document Navigation <\/strong><br>\"),\n                               actionButton(\"prevDocument\", \"Previous\", icon = icon(\"arrow-left\")),\n                               actionButton(\"nextDocument\", \"Next\", icon = icon(\"arrow-right\"))))),\n                    bootstrapPage(\n                      tags$style(\n                        \"#textDisplay {\n                        overflow-y: scroll;\n                        height: 42vh;\n                    }\"\n                      ),\n                      uiOutput(\"textDisplay\"),\n                      tags$script('\n                              function getSelectionText() {\n                                var text = \"\";\n                                if (window.getSelection) {\n                                  text = window.getSelection().toString();\n                                } else if (document.selection) {\n                                  text = document.selection.createRange().text;\n                                }\n                                return text;\n                              }\n                              \n                              document.onmouseup = document.onkeyup = document.onselectionchange = function() {\n                                var selection = getSelectionText();\n                                Shiny.onInputChange(\"extract\",selection);\n                              };\n                              ')\n                    )),\n                box(title = \"Quick Look\", width = 6, solidHeader = TRUE, status = \"primary\",\n                    fluidPage(DTOutput(\"counterTable\")\n                    )\n                ),\n              ),\n              fluidRow(\n                box(title = \"Research Question(s)\", width = 12, solidHeader = TRUE, status = \"primary\",\n                    textAreaInput(\"text\",\n                                  \"Enter your research question(s) below\")\n                )\n              ),\n              fluidRow(\n                box(title = \"Codebook\", width = 12, solidHeader = TRUE, status = \"primary\",\n                    actionButton(\"addSelectedText\", \"Add Selected Text as Extract\", icon = icon(\"pencil\")),\n                    actionButton(\"deleteExtract\", \"Delete Extract from Codebook\", icon = icon(\"trash\")),\n                    actionButton(\"addColumn\", \"Add Column to Codebook\", icon = icon(\"plus\")),\n                    actionButton(\"removeColumn\", \"Remove Column from Codebook\", icon = icon(\"minus\")),\n                    HTML(\"<br><br>\"),\n                    DTOutput(\"codebookTable\")))\n      ),\n      tabItem(tabName = \"reviewer\",\n              fluidRow(\n                box(title = \"Codebook\", width = 3, solidHeader = TRUE, status = \"primary\",\n                    DTOutput(\"codesTable\")),\n                box(title = \"Extracts\", width = 9, solidHeader = TRUE, status = \"primary\",\n                    DTOutput(\"reviewTable\"))\n              ),\n              fluidRow(\n                box(title = \"Document Review\", width = 12, solidHeader = TRUE, status = \"primary\",\n                    uiOutput(\"reviewDocumentText\"))\n              )\n      ),\n      tabItem(tabName = \"themes\",\n              fluidRow(\n                box(title = \"Themes\", width = 12, solidHeader = TRUE, status = \"primary\",\n                    actionButton(\"addTheme\", \"Create a new theme\", icon = icon(\"plus\")),\n                    downloadButton(\"downloadThemes\", \"Download themes\", icon = icon(\"floppy-disk\")),\n                uiOutput(\"uniqueCodes\")\n                )\n              ))\n    )\n  )\n)\n\n### SERVER ###\nserver <- function(input, output, session) {\n  # Reactive values to store data and codebook\n  values <- reactiveValues(\n    corpus = NULL, # the text data to be analysed\n    documentTextColumn = NULL, # the column which contains document text\n    selectedText = NULL,\n    codebook = tibble(Theme = as.character(), \n                      Code = as.character(), \n                      Extract = as.character(), \n                      Document_ID = as.numeric(),\n                      Timestamp = as.character()),\n    counter = data.frame(),\n    currentDocumentIndex = 1,\n    nDocuments = 1,\n    selection = NULL,\n    thisExtract = NULL,\n    nThemes = 2 # for sorting into themes\n  )\n  \n  ### FUNCTIONS ###\n  # Update text display based on currentDocumentIndex and documentTextColumn\n  updateTextDisplay <- function() {\n    req(values$corpus, values$documentTextColumn)\n    text <- values$corpus[[values$documentTextColumn]][values$currentDocumentIndex]\n    #text <- sub(\"<span*/span>\",\"\",text) # Remove any leftover HTML\n    text <- gsub(pattern = \"\\n\", replacement = \"\", text) # Remove line breaks because they \"break\" the app...\n    text <- gsub(pattern = \"\\\\s+\", replacement = \" \", text)\n    #text <- gsub(pattern = \"\\\"\", replacement = \"'\", text) # Replace double quotation marks with single ones.\n    textLength <- str_length(text)\n    \n    # Add highlights here by adding HTML tags to text\n    # Retrieve document ID\n    currentDoc <- values$currentDocumentIndex\n    \n    # Get saved extracts for document ID\n    currentExtracts <- values$codebook %>% \n      dplyr::filter(Document_ID == currentDoc)\n    oldStrings = currentExtracts$Extract\n    \n    if (length(oldStrings) > 0) {\n      # Detect where extracts start and finish in text\n      stringLocs <- as.data.frame(str_locate(text,paste0(\"\\\\Q\",oldStrings,\"\\\\E\")))\n      stringLocs <- na.omit(stringLocs) # omit NA where matches don't work with special characters\n      addedStringStart = last(stringLocs$start)\n      # Sort these locations by their starting order\n      stringLocs <- stringLocs %>% \n        arrange(start)\n      \n      # If more than one string, check for overlaps (leetcode 56)\n      if (length(oldStrings) > 1) {\n        # Write the first interval to start result\n        reducedStrings <- tibble(start = as.numeric(),\n                                 end = as.numeric()) %>% \n          tibble::add_row(start = head(stringLocs$start, n = 1), \n                          end = head(stringLocs$end, n = 1))\n        \n        for (i in 1:nrow(stringLocs)) {\n          # Retrieve the next interval\n          thisStringStart <- stringLocs$start[i]\n          thisStringEnd <- stringLocs$end[i]\n          # Check for overlap\n          if (between(thisStringStart,\n                      tail(reducedStrings, n = 1)$start,tail(reducedStrings, n = 1)$end)) {\n            # If overlap, change value of interval\n            reducedStrings[nrow(reducedStrings),ncol(reducedStrings)] = max(thisStringEnd,tail(reducedStrings, n = 1)$end)\n          }\n          else {\n            # If no overlap, add the interval\n            reducedStrings <- reducedStrings %>% \n              add_row(start = thisStringStart, end = thisStringEnd)\n          }\n        }\n        # Arrange in descending order for inserting HTML\n        stringLocs <- reducedStrings %>% \n          arrange(desc(start))\n      }\n      \n      for (i in 1:nrow(stringLocs)) {\n        # Get start and end\n        stringStart <- stringLocs$start[i]\n        stringEnd <- stringLocs$end[i]\n        theString <- str_sub(text,stringStart,stringEnd)\n        # Get string\n        if (stringStart == addedStringStart) {\n          str_sub(text,stringStart,stringEnd) <- paste0(\"<span id=\\\"lastString\\\" style=\\\"background-color: powderblue\\\">\",theString,\"<\/span>\")\n        } else {\n          str_sub(text,stringStart,stringEnd) <- paste0(\"<span style=\\\"background-color: powderblue\\\">\",theString,\"<\/span>\")\n        }\n      }\n    }\n    \n    # Hope it works\n    if (textLength >= 600) {\n      output$textDisplay <- renderUI({\n        tags$div(id = \"textDisplay\",\n                 tags$p(HTML(text), id = \"currentText\", style = \"font-size: 20px\"),\n                 tags$script('\n                              lastString.scrollIntoView();\n                             '))\n      })\n    } else {\n      output$textDisplay <- renderUI({\n        tags$div(id = \"textDisplay\",\n                 tags$p(HTML(text), id = \"currentText\", style = \"font-size: 20px\"))\n      })\n    }\n  }\n  \n  # Update document viewer ID number\n  updateDocumentID <- function() {\n    updateNumericInput(\n      session,\n      inputId = \"documentID_viewer\",\n      value = values$currentDocumentIndex,\n      max = values$nDocuments)\n  }\n  \n  # Save codebook locally\n  saveCodebook <- function() {\n    req(values$codebook)\n    write.csv(values$codebook, \"temp_codebook.csv\", row.names = FALSE)\n  }\n  \n  # Render codebook\n  renderCodebook <- function() {\n    output$codebookTable <- renderDT({\n      idColNum <- which(colnames(values$codebook) == \"Timestamp\")\n      datatable(values$codebook,\n                options = list(order = list(idColNum-1,'desc')),\n                editable = TRUE, \n                rownames = FALSE)\n    })\n  }\n  \n  # Render code counter\n  renderCounter <- function() {\n    values$counter <- values$codebook %>% \n      count(Code, name = \"Instances\")\n    \n    output$counterTable <- renderDT({\n      datatable(values$counter, \n                editable = list(target = \"cell\",\n                                disable = list(columns = 1)),\n                rownames = FALSE)\n    })\n    \n    output$codesTable <- renderDT({\n      datatable(values$counter, \n                editable = list(target = \"cell\",\n                                disable = list(columns = 1)),\n                rownames = FALSE)\n    })\n  }\n  \n  ### UPLOADING DATA ###\n  # Load corpus CSV file and update column selector\n  observeEvent(input$corpusFile, {\n    req(input$corpusFile)\n    if (file_ext(input$corpusFile$datapath) == \"csv\") {\n      values$corpus <- read.csv(input$corpusFile$datapath, stringsAsFactors = FALSE)\n    } else if (file_ext(input$corpusFile$datapath) == \"txt\") {\n      values$corpus <- read.delim(input$corpusFile$datapath, header = FALSE, sep = \"\\n\")\n    } else if (file_ext(input$corpusFile$datapath) == \"pdf\") {\n      pdfDocumentText <- pdf_text(input$corpusFile$datapath)\n      values$corpus <- tibble(text = pdfDocumentText)\n    } else if (file_ext(input$corpusFile$datapath) == \"docx\") {\n      doc <- read_docx(input$corpusFile$datapath)\n      docContent <- docx_summary(doc) %>% \n        filter(text != \"\")\n      values$corpus <- tibble(text = docContent$text)\n      \n    }\n    colnames <- colnames(values$corpus)\n    values$documentTextColumn <- colnames[1]  # Default to the first column\n    values$currentDocumentIndex <- 1  # Reset index on new file load\n    values$nDocuments <- nrow(values$corpus) # Get number of documents\n    \n    output$documentTextSelector <- renderUI({\n      req(values$corpus)\n      selectInput(\"documentTextColumn\", \"Select Text Column\",\n                  choices = colnames,\n                  selected = values$documentTextColumn)\n    })\n    \n    updateTextDisplay()\n    renderCodebook()\n    renderCounter()\n    \n    updateSelectInput(session, \"codebookSelector\", choices = values$codebook$Theme, selected = NULL)\n  })\n  \n  # Update codebook on upload\n  observeEvent(input$codebookFile, {\n    req(input$codebookFile)\n    values$codebook <- read.csv(input$codebookFile$datapath, stringsAsFactors = FALSE)\n    colnames <- colnames(values$codebook)\n    renderCodebook()\n    renderCounter()\n    updateTextDisplay()\n  })\n  \n  \n  ## DOCUMENT NAVIGATION ##\n  # Update display after document text column is selected\n  observeEvent(input$documentTextColumn, {\n    values$documentTextColumn <- input$documentTextColumn\n    updateTextDisplay()\n  })\n  \n  # Updated display after document ID is scrolled\n  observeEvent(input$documentID_viewer, {\n    req(values$corpus)\n    if (input$documentID_viewer > nrow(values$corpus)) {\n      values$currentDocumentIndex <- nrow(values$corpus)\n      updateTextDisplay()\n    } else if (values$currentDocumentIndex > 1) {\n      values$currentDocumentIndex <- input$documentID_viewer\n      # Updated text display\n      updateTextDisplay()\n    }\n  })\n  \n  # Action button for previous document\n  observeEvent(input$prevDocument, {\n    req(values$corpus)\n    if (values$currentDocumentIndex > 1) {\n      values$currentDocumentIndex <- values$currentDocumentIndex - 1\n      \n      # Updated text display\n      updateDocumentID()\n      updateTextDisplay()\n      \n    }\n  })\n  \n  # Action button for next document\n  observeEvent(input$nextDocument, {\n    req(values$corpus)\n    if (values$currentDocumentIndex < nrow(values$corpus)) {\n      values$currentDocumentIndex <- values$currentDocumentIndex + 1\n      updateDocumentID()\n      updateTextDisplay()\n    }\n  })\n  \n  ## CODEBOOK ACTIONS ##\n  # Save after any edits to the codebook\n  observeEvent(input$codebookTable_cell_edit, {\n    values$codebook <- editData(values$codebook, input$codebookTable_cell_edit, rownames = FALSE, 'codebookTable')\n    saveCodebook()\n    renderCounter()\n    updateTextDisplay()\n  })\n  \n  # Add selected text as extract\n  observeEvent(input$addSelectedText, {\n    req(values$codebook,input$extract)\n    selectedText <- input$extract # Highlighted text within document to-be-extracted\n    \n    # Detect any selected rows\n    #    if (nrow(values$counter) > 0) {\n    if (!is.null(input$counterTable_rows_selected)) {\n      selectedRow <- input$counterTable_rows_selected\n      allCodes <- values$counter$Code\n      selectedCode <- allCodes[selectedRow]\n    } else {\n      selectedCode = \"\"\n    }\n    #    } else {\n    #       selectedCode = \"\"\n    #   }\n    \n    # Append the selected text to codebook as extract\n    values$codebook <- values$codebook %>% \n      add_row(Theme = \"\",\n              Code = selectedCode,\n              Extract = selectedText,\n              Document_ID = values$currentDocumentIndex,\n              Timestamp = as.character(Sys.time()))\n    \n    renderCodebook()\n    renderCounter()\n    updateTextDisplay()\n  })\n  \n  # Delete extract from codebook\n  observeEvent(input$deleteExtract, {\n    req(input$codebookTable_rows_selected)\n    whichRow <- input$codebookTable_rows_selected # highlighted rows in codebook\n    values$codebook <- values$codebook[-whichRow,]\n    renderCodebook()\n    renderCounter()\n    updateTextDisplay()\n  })\n  \n  # Get column name in response to add button\n  observeEvent(input$addColumn, {\n    req(values$codebook)\n    showModal(modalDialog(\n      textInput(\"colName\", \"Name of new column in codebook:\",\n                value = \"Notes\",\n                placeholder = \"Notes\"),\n      footer = tagList(modalButton(\"Cancel\"),\n                       actionButton(\"addCol\",\"OK\"))))\n  })\n  \n  # Add column to codebook after getting name\n  observeEvent(input$addCol, {\n    req(values$codebook)\n    newColName = input$colName\n    if (newColName == \"\") {\n      newColName = \"New column\"\n    }\n    values$codebook <- values$codebook %>% \n      mutate(newColumn = as.character(\"\")) %>%\n      rename_with(~ newColName, newColumn)\n    \n    removeModal()\n    renderCodebook()\n  })\n  \n  # Remove column name in response to add button\n  observeEvent(input$removeColumn, {\n    req(values$codebook)\n    showModal(modalDialog(\n      selectInput(\"minusCol\", \"Select which column to remove\",\n                  choices = colnames(values$codebook)),\n      footer = tagList(modalButton(\"Cancel\"),\n                       actionButton(\"minusColButton\",\"OK\"))))\n  })\n  \n  # Remove column to codebook after getting selection\n  observeEvent(input$minusColButton, {\n    req(values$codebook)\n    minusColName = input$minusCol\n    values$codebook <- values$codebook %>% \n      select(-matches(paste0(minusColName)))\n    \n    removeModal()\n    renderCodebook()\n  })\n  \n  # Save and apply rewording of code\n  observeEvent(input$counterTable_cell_edit, {\n    # Update counter\n    values$counter <- editData(values$counter, input$counterTable_cell_edit, rownames = FALSE, 'counterTable')\n    \n    ## Get previous code value\n    # Recreate previous counter\n    oldCounterTable <- values$codebook %>% \n      count(Code, name = \"Instances\")\n    \n    # Retrieve old Code\n    info = input$counterTable_cell_clicked\n    changeRow = info$row\n    changeCol = info$col\n    oldValue = info$value\n    \n    # Retrieve new Code\n    new_info = input$counterTable_cell_edit\n    newValue = new_info$value\n    \n    # Replace strings in codebook\n    values$codebook$Code[values$codebook$Code == oldValue] <- as.character(newValue)\n    renderCodebook()\n  })\n  \n  # Download handler for the codebook\n  output$downloadData <- downloadHandler(\n    filename = function() {\n      paste(\"codebook-\", Sys.Date(), \".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(values$codebook, file, row.names = FALSE)\n    }\n  )\n  \n  ## EXTRACT VIEWER (REVIEW TAB)\n  # Display all extracts related to a code\n  findExtracts <- function() {\n    # Get selected code\n    whichRow <- input$codesTable_rows_selected\n    allCodes <- values$counter$Code\n    selectedCode <- allCodes[whichRow]\n    \n    # Filter for relevant extracts\n    relevantExtracts <- values$codebook %>% \n      dplyr::filter(grepl(paste(selectedCode,\n                                collapse = \"|\"),\n                          Code)) %>%\n      select(Extract)\n    \n    # Organise the display to show all extracts.\n    output$reviewTable <- renderDT({\n      datatable(relevantExtracts, \n                rownames = FALSE)\n    })\n  }\n  \n  showDocument <- function() {\n    req(input$codesTable_rows_selected,input$reviewTable_rows_selected)\n    # Get selected codes\n    whichRow <- input$codesTable_rows_selected\n    allCodes <- values$counter$Code\n    selectedCode <- allCodes[whichRow]\n    \n    # Get selected extract\n    whichExtractRow <- input$reviewTable_rows_selected\n    whichExtractRow <- max(whichExtractRow) # in case multiple selected.\n    \n    # Filter for data\n    documentData <- values$codebook %>% \n      dplyr::filter(grepl(paste(selectedCode,\n                                collapse = \"|\"),\n                          Code)) %>% \n      select(Document_ID,Extract)\n    \n    # Find which document\n    allDocs <- documentData$Document_ID\n    selectedDocument <- allDocs[whichExtractRow]\n    documentText <- values$corpus[[values$documentTextColumn]][selectedDocument]\n    \n    # Find exact extract\n    allExtracts <- documentData$Extract\n    selectedExtract <- allExtracts[whichExtractRow]\n    \n    # Clean document text\n    documentText <- gsub(pattern = \"\\n\", replacement = \"\", documentText) # Remove line breaks because they \"break\" the app...\n    documentText <- gsub(pattern = \"\\\\s+\", replacement = \" \", documentText)\n    \n    # Find location of matches\n    stringEnds <- as.data.frame(str_locate(documentText,paste0(\"\\\\Q\",selectedExtract,\"\\\\E\")))\n    \n    # Replace with highlight HTML\n    stringBegin <- stringEnds$start\n    stringFinish <- stringEnds$end\n    str_sub(documentText,stringBegin,stringFinish) <- paste0(\"<span style=\\\"background-color: powderblue\\\">\",selectedExtract,\"<\/span>\")\n    \n    output$reviewDocumentText <- renderUI({\n      tags$div(id = \"reviewDocumentText\",\n               tags$p(HTML(documentText), id = \"currentDocumentText\", style = \"font-size: 20px\"))\n    })\n    \n  }\n  \n  # If reviewing tab selected\n  observeEvent(input$codesTable_rows_selected, {\n    findExtracts()\n  }\n  )\n  \n  observeEvent(input$reviewTable_rows_selected, {\n    req(input$codesTable_rows_selected)\n    showDocument()\n  }\n  )\n  \n  ## SORTING CODES INTO THEMES\n  ## Probably need a build UI function, and then a render function.\n  ## Also need an output function.\n  \n  # Define reactive value for the codes organised into themes (bucket_list)\n  themeData <- reactiveValues(themeList = list(),\n                              themeName = list())\n  \n  # Load codes in initially\n  loadInCodes <- function() {\n    req(values$counter)\n    if (!is.null(values$counter$Code)) {\n      allCodes <- values$counter$Code\n      themeData$themeList$rank_list_1 <- allCodes\n      themeData$themeList$rank_list_2 <- list()\n    }\n  }\n  \n  # Render after clicking on the sidebar menu the first time\n  observeEvent(input$sbMenu, {\n    if (input$sbMenu == \"themes\" && length(themeData$themeList)<1) {\n      loadInCodes()\n    }\n  })\n  \n  # Save reactive values for codes organised into themes\n  saveThemeData <- function() {\n    themeData$themeList <- input$codesToThemes # Saves in the current list\n  }\n  \n  observeEvent(input$addTheme, {\n    req(input$codesToThemes)\n    saveThemeData()\n    themeData$themeList[length(themeData$themeList)+1] <- list(NULL)\n    updateCodesUI()\n  })\n\n  observeEvent(input$sbMenu, {\n    # Define rank list for bucket\n    if (length(themeData$themeList) > 0) {\n      buildRankList <- lapply(seq(length(themeData$themeList)), function(x) {\n        if (x <= length(themeData$themeList)) {\n          add_rank_list(\n            text = \"\",\n            labels = themeData$themeList[[x]],\n            input_id = paste0(\"rank_list_\",x)\n          )\n        } else {\n          add_rank_list(\n            text = \"\",\n            labels = list(),\n            input_id = paste0(\"rank_list_\",x)\n          )\n        }\n      })\n      \n    # Render theme UI\n    renderCodesUI <- function() {\n      output$uniqueCodes <- renderUI({\n        do.call(\"bucket_list\", args = c(\n          list(header = \"\",\n               group_name = \"codesToThemes\",\n               orientation = \"horizontal\"),\n          buildRankList\n        ))\n      })\n    }\n    \n    renderCodesUI()\n    saveThemeData()\n    }\n  })\n  \n  ## Function for rendering codes UI\n  # Define rank list for bucket\n  updateCodesUI <- function() {\n    if (length(themeData$themeList) > 0) {\n      buildRankList <- lapply(seq(length(themeData$themeList)), function(x) {\n        if (x <= length(themeData$themeList)) {\n          add_rank_list(\n            text = \"\",\n            labels = themeData$themeList[[x]],\n            input_id = paste0(\"rank_list_\",x)\n          )\n        } else {\n          add_rank_list(\n            text = \"\",\n            labels = list(),\n            input_id = paste0(\"rank_list_\",x)\n          )\n        }\n      })\n      \n      # Render theme UI\n      renderCodesUI <- function() {\n        output$uniqueCodes <- renderUI({\n          do.call(\"bucket_list\", args = c(\n            list(header = \"\",\n                 group_name = \"codesToThemes\",\n                 orientation = \"horizontal\"),\n            buildRankList\n          ))\n        })\n      }\n      \n      renderCodesUI()\n    }\n  }\n  \n  output$downloadThemes <- downloadHandler(\n    filename = function() {\n      paste0(\"themes-\",Sys.Date(),\".csv\")\n    },\n    content = function(file) {\n      themeData$themeList <- input$codesToThemes\n      # Find max length of lists\n      maxLength <- max(lengths(themeData$themeList))\n      # Convert themes into dataframe\n      themesOut <- do.call(rbind, lapply(themeData$themeList, `[`, seq_len(maxLength)))\n      themesOut <- t(themesOut)\n      # Send to download handler\n      write.csv(themesOut,file)\n    }\n  )\n  \n}\n\nshinyApp(ui, server)","type":"text"},{"name":"LICENSE","content":"MIT License\n\nCopyright (c) 2024 William Ngiam\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","type":"text"},{"name":"README.md","content":"# _QualCA_ – Qualitative Coding App\n\n**_QualCA_** (pronounced _quokka_, like the small Australian marsupial) is a lightweight in-browser _R Shiny_ app for extracting and coding texts for qualitative analysis.\n\nThis repository contains the R Shiny code that is deployed at https://palm-lab.github.io/QualCA. You can run the ShinyApp locally within R / RStudio, making changes to the underlying code as needed. One advantage of running the app on your local device is that a temporary codebook file is automatically saved as a back-up for any unexpected crashes.\n\n# How to use the app\n\nOpen the app in R Studio by opening the code file (`app.R`). A **Run App** button should appear in the top right of the code editor.\n\n1. Organize your **corpus** as a CSV file, such that the each **document** is a different row and the **document text** is contained in one column.\n2. Upload your **corpus** CSV to **_QualCA_** using the button on the left-side menu. A menu will appear below to select the CSV column that contains the to-be-coded text, in case the corpus contains mutliple columns.\n3. If you are returning to the **_QualCA_** app, you can upload your previously saved codebook CSV using the button on the left-side menu to continue your analysis.\n4. You can scroll through the documents by pressing the 'previous' or 'next' buttons in the _Document Viewer_ pane of the app. You can also type in a numeric value into the _Document #_ bar to navigate to that document.\n5. To add an extract to the codebook, highlight the text in the document using your cursor and press the 'Add Selected Text as Extract' button in the _Codebook_ pane. When clicked, the highlighted text will appear in the _Extract_ column, and will be highlighted in blue in the _Document Viewer_. \n6. You can then add a Code or Theme to an extract by double clicking on the relevant cell within the codebook table, and typing the new Code.\n7. A _Counter_ pane in the top-right of the app shows how many extracts are associated with each Code. You can edit a Code by double clicking on it in the _Counter_, and typing in the new Code. This will change the Code for all extracts associated with the old Code.\n8. To save your progress, you can click the _Download Codebook_ button in the left-side menu. The Codebook is saved as a CSV file, which you can upload to **_QualCA_** on your next visit.\n\n# Acknowledgements\n\nThe **_QualCA_** app is [hosted on Github Pages at https://palm-lab.github.io/QualCA](https://palm-lab.github.io/QualCA) using the [shinylive](https://posit-dev.github.io/r-shinylive/) package, and makes use of this [helpful StackOverflow answer by user GGamba](https://stackoverflow.com/questions/42274461/can-shiny-recognise-text-selection-with-mouse-highlighted-text). \n\nThis app was created for an ongoing research project with Carly Stagg, Natasha van Antwerpen and Ella Moeck, who brought knowledge on how to conduct qualitative analysis, shared what would be desirable features, and tested earlier versions of the app.\n\n[Clinton Hadinata](https://github.com/hadinata) provided debugging help and useful advice on how to handle overlapping intervals.\n\nWilliam Ngiam created this app while employed as a Lecturer in the School of Psychology at the University of Adelaide.","type":"text"},{"name":"home_text.html","content":"<h1>Welcome to Quokka, a qualitative methods coding app.<\/h1>\n<h4>Created by William XQ Ngiam, University of Adelaide.<\/h4>\n<h4>This app is in alpha - version 0.1.4. If you would like to share feedback, please email me at william.ngiam@adelaide.edu.au.<\/h4>\n\n<h3>How to use this app:<\/h3><font size = \"5\"><ol>\n<li>Organize your <b>corpus<\/b> as a CSV file, such that the each <i>document<\/i> is a different row and the <i>document text<\/i> is contained in one column.<\/li>\n<li>Upload your <b>corpus<\/b> CSV to QualCA using the button on the left-side menu. A menu will appear below to select the CSV column that contains the to-be-coded text, in case the corpus contains mutliple columns.<\/li>\n<li>If you are returning to the QualCA app, you can upload your previously saved codebook CSV using the button on the left-side menu to continue your analysis.<\/li>\n<li>Click the <b>\"Coding\"<\/b> tab on the sidebar to begin coding. You can scroll through the documents by pressing the 'previous' or 'next' buttons in the <i>Document Viewer<\/i> pane of the window. You can also type in a numeric value into the <i>Document # bar<\/i> to navigate to that document.<\/li>\n<li>To add an extract to the codebook, highlight the text in the document using your cursor and press the 'Add Selected Text as Extract' button in the <i>Codebook<\/i> pane. When clicked, the highlighted text will appear in the <i>Extract<\/i> column, and will be highlighted in blue in the <i>Document Viewer<\/i>.<\/li>\n<li>You can then add (or edit) a <i>Code<\/i> or <i>Theme<\/i> to an extract by double clicking on the relevant cell within the codebook table, and typing the new <i>Code<\/i>.<\/li>\n<li>A <i>Counter<\/i> pane in the top-right of the app shows how many extracts are associated with each <i>Code<\/i>. You can edit a <i>Code<\/i> by double clicking on it in the <i>Counter<\/i>, and typing in the new <i>Code<\/i>. This will change the <i>Code<\/i> for all extracts associated with the old <i>Code<\/i>.<\/li>\n<li>If you would like to apply an existing <i>Code<\/i> to a new extract, you may select the <i>Code<\/i> in the <i>Counter<\/i> before highlighting the to-be-extracted text. The Code will automatically be applied when you add the extract to the codebook.<\/li>\n<li>The <b>\"Research Question\"<\/b> box is an open-text box that you can use to keep any relevant text. It is useful to keep your research question as you code, perhaps refining the question as you continue your analysis.<\/li>\n<li>You can add a column to the codebook by pressing the <b>Add Column<\/b> button. This may be useful for keeping notes or other information alongside the extracts.<\/li>\n<li>To save your progress, you can click the Download Codebook button in the left-side menu. The codebook is saved as a CSV file, which you can upload to QualCA on your next visit.<\/li>\n<li>If you would like to review your coding so far, you can open the left-side menu and click the <b>\"Reviewing\"<\/b> tab. On this tab, the <i>Counter<\/i> will be shown in the top-left, displaying the codes so far and the number of instances for each code. Click on a code in the <i>Counter<\/i> to display all extracts that are associated with that code.<\/li>\n<li>Click on an extract from the shown list to display the document containing that extract below in the Document Review box. Only the bottom-most extract will be displayed if more than one extract is selected from the <i>Extracts<\/i> list.<\/li>\n<\/font>","type":"text"},{"name":"temp_codebook.csv","content":"\"Theme\",\"Code\",\"Extract\",\"Document_ID\",\"Timestamp\",\"Notes\"\nNA,\"brain rot\",\"Tiktok is 100% brain rot\",5,\"2024-12-11 14:01:56.132016\",\"\"\nNA,\"mindlessness\",\"The cellphone, picking it up constantly and searching for shit online, mindlessly.\",23,\"2024-12-11 14:05:33.109472\",\"\"\nNA,\"-Strategy- dumbphone\",\"Replace your phone with a flip phone (only calls and texts) for 6 monthsStare at the wall for 30 mins everyday 2 times a day (morning and evening) for 6 monthDrink only water for 6 monthsNo video games, no movies, no funny YouTube videos for 6 months (if u have a pc)\",25,\"2024-12-11 14:06:51.504242\",\"\"\nNA,\"dopamine\",\"The idea is to remove all sources of cheap dopamine from your life and your brain will be forced to find dopamine elsewhere.\",25,\"2024-12-11 14:07:19.401423\",\"Partly in reference to digital media based on early text in post\"\nNA,\"can't put phone down\",\"I can't put my fucking phone down, it's driving me insane and into depression.\",32,\"2024-12-11 14:08:45.054373\",NA\nNA,\"phone use causing depression\",\"I can't put my fucking phone down, it's driving me insane and into depression.\",32,\"2024-12-11 14:09:14.864906\",NA\nNA,\"-strategy- be bored\",\"You’ve got to lean into the boredom. It’s uncomfortable at first.\",35,\"2024-12-11 14:10:26.764744\",NA\nNA,\"endless scrolling results in extreme dopamine levels\",\"extreme levels your brain gets from endless scrolling.\",35,\"2024-12-11 14:10:54.683351\",NA\nNA,\"[strategy] change reward values\",\"when you let yourself experience boredom for a while, you’re able to do more productive activities and the dopamine you get from it starts to be rewarding enough once it doesn’t have to compete with the extreme levels your brain gets from endless scrolling.\",35,\"2024-12-11 14:11:10.181451\",NA\nNA,\"dopamine\",\"when you let yourself experience boredom for a while, you’re able to do more productive activities and the dopamine you get from it starts to be rewarding enough once it doesn’t have to compete with the extreme levels your brain gets from endless scrolling.\",35,\"2024-12-11 14:11:30.32517\",NA\nNA,\"takes up time\",\"YouTube steals hours from my life every day.\",35,\"2024-12-11 14:11:41.855129\",NA\nNA,\"-strategy- dopamine bar (treat dopamine as limited resource)\",\" avoid dopamine stacking; scrolling through Instagram/Reddit while playing videogames or watching movies sets a higher dopamine tolerance for that activity, making it less enjoyable when you do it without instagram in the background\",36,\"2024-12-11 14:12:13.701269\",NA\nNA,\"Scrolling causes you to suppress thoughts\",\"People have trouble sleeping with racing thoughts because they haven't given themselves enough time to think about whatever they have on their mind. Constantly scrolling,\",39,\"2024-12-11 14:13:07.760389\",NA\nNA,\"Digital media pushes thoughts away\",\"Constantly scrolling, listening to music, having videos on in the background just pushes your thoughts away to when you don't have any distractions.\",39,\"2024-12-11 14:13:38.057834\",NA\nNA,\"-strategy- building discipline and control\",\"my view is that if you can stay off your phone for a weeks that builds discipline. And that's a good thing.\",61,\"2024-12-11 14:21:33.68925\",NA\nNA,\"technology designed to distract\",\"This whole social media, tv, movies, get the latest iPhone hype were all psychological traps the Elites set out to distract the masses and filter out the strongest from the weak.\",82,\"2024-12-11 14:25:32.655034\",NA\nNA,\"-strategy- elimination\",\"Let's actually challenge ourselves to cut social media (inc YT and this Reddit) like right today, now\",82,\"2024-12-11 14:27:23.110182\",\"enough context in the extract to be about attention\"\nNA,\"-strategy- blocker app\",\"If you need to use YT for whatever valid reason (i.e for work or for learning) just go onto the video, copy the URL as fast as you can and paste it in viewpure.com\",82,\"2024-12-11 14:28:07.610973\",\"enough context in the extract to be about attention\"\nNA,\"Tiktok impacts ability to be present and enjoy things\",\"The point is to re-balance your perception of enjoyment, stop using things that are actually harmful like Porn and Tiktok and generally learning to be present and actually enjoy things again.\",88,\"2024-12-11 14:29:52.126949\",NA\nNA,\"Tiktok is harmful\",\"The point is to re-balance your perception of enjoyment, stop using things that are actually harmful like Porn and Tiktok\",88,\"2024-12-11 14:30:19.323772\",NA\nNA,\"-strategy- embrace boredom\",\"Next time you're bored out of your mind and think of pulling up YT, instead stop and bask in it. \",97,\"2024-12-11 14:32:10.84042\",NA\nNA,\"Tiktok harms attention span\",\"deleting TikTok you attention spann gets killed with this App\",98,\"2024-12-11 14:32:58.588227\",NA\nNA,\"-strategy- elimination\",\"I would start with deleting TikTok you attention spann gets killed with this App\",98,\"2024-12-11 14:33:13.722022\",NA\nNA,\"brain resetting\",\"Brain is just resetting\",1,\"2025-01-08 13:33:38.230956\",NA\nNA,\"instagram reels as bad as tiktok\",\"reels are as bad as tiktok\",28,\"2025-01-08 13:38:46.012322\",NA\nNA,\"wish to deactivate instagram reels\",\"If only there were an option to deactivate Instagram Reels! I need at least one social media place to keep up with my friends, and I find IG to be the least draining/addictive\",28,\"2025-01-08 13:39:07.918944\",NA\nNA,\"Youtube use is a habit\",\"YouTube steals hours from my life every day. I’m still working on managing it. Good for you for stopping the habit!\",35,\"2025-01-08 13:44:16.363807\",NA\nNA,\"dopamine stacking - dividing attention between technology sets higher dopamine tolerance\",\"avoid dopamine stacking; scrolling through Instagram/Reddit while playing videogames or watching movies sets a higher dopamine tolerance for that activity, making it less enjoyable when you do it without instagram in the background\",36,\"2025-01-08 13:45:45.140582\",NA\nNA,\"Scrolling as a distraction leads to racing thoughts when not distracted\",\"You haven't been giving your brain enough time to think, and it's catching up to you. People have trouble sleeping with racing thoughts because they haven't given themselves enough time to think about whatever they have on their mind. Constantly scrolling, listening to music, having videos on in the background just pushes your thoughts away to when you don't have any distractions.\",39,\"2025-01-08 13:47:27.202187\",NA\nNA,\"Enjoy being alone more after reducing distractions\",\"I’ve found I enjoy being alone now that I’m off the majority of dopamine-sucking vices. More time for improvement. Less distractions.\",57,\"2025-01-08 13:58:46.691209\",NA\nNA,\"Dopamine detox leads to fewer attention problems\",\"My hypothesis is that once you undergo the dopamine detox:​You'll be:​More creativeMore concentratedReduced symptoms of ADHDMore resilient to pain/distractionAble to experience happiness doing mundane/stressful things (such as work, career)Better career advancementHigher cognition and more ways to develop solutions intuitively\",82,\"2025-01-08 14:04:10.32836\",NA\nNA,\"Dopamine detox leads to improved cognition\",\"My hypothesis is that once you undergo the dopamine detox:​You'll be:​More creativeMore concentratedReduced symptoms of ADHDMore resilient to pain/distractionAble to experience happiness doing mundane/stressful things (such as work, career)Better career advancementHigher cognition and more ways to develop solutions intuitively\",82,\"2025-01-08 14:04:34.207813\",NA\nNA,\"-strategy- embrace bordeom\",\"You’re going to be fine dude, but you need to put some effort into embracing boredom. That’s why you look at your phone every 5min. Human brain hates being bored so it will do what it can to avoid it. Remember it will be a conscious effort but it will be worth it.\",85,\"2025-01-08 14:09:48.176349\",NA\nNA,\"brain hates boredom so seeks distraction from phones\",\"You’re going to be fine dude, but you need to put some effort into embracing boredom. That’s why you look at your phone every 5min. Human brain hates being bored so it will do what it can to avoid it. Remember it will be a conscious effort but it will be worth it.\",85,\"2025-01-08 14:10:03.876574\",NA\nNA,\"-strategy- stop use to learn to be present\",\"stop using things that are actually harmful like Porn and Tiktok and generally learning to be present and actually enjoy things again.\",88,\"2025-01-08 14:11:40.711882\",NA\nNA,\"Goal of tech detox - remove things impacting your focus\",\"You shouldn‘t. The goal is not to take away any and all pleasures. Just the ones that are taking away your time and focus. Music can also be helpful in being productive, depending on the activity and the music of course.\",89,\"2025-01-08 14:12:30.781353\",NA\nNA,\"-strategy- replace phone use with self-improvement books\",\"Consume positive content off of social media like self improvement books.\",95,\"2025-01-08 14:13:10.203351\",NA\nNA,\"-strategy- leave phone and go offline\",\"Go outside for a walk and leave your phone inside.\",95,\"2025-01-08 14:13:36.658851\",NA\n\"\",\"-strategy- cut back on using your phone\",\"I highly recommend deleting all dopamine inducing apps. Kind of be a minimalist in the way you use your phone, use it for calling and texting and its most basic uses, you'll start to rely on it less and less.\",304,\"2025-01-12 16:12:00.933098\",NA\n\"\",\"-strategy- find 'productive' uses for your phone\",\"try reading ebooks on your phone instead so that when your are on your phone its productive rather than destructive\",304,\"2025-01-12 16:12:32.434103\",\"the notion that it might not be device, but there are useful things to spend your time while on the device \"\n\"\",\"Dopamine hit from online websites like youtube and reddit\",\"problem is that its so much easier getting your dopamine hit from YouTube, Reddit and the like than actually doing something productive.\",308,\"2025-01-12 16:13:57.651214\",NA\n\"\",\"Not about getting less dopamine but about not wasting time\",\"problem is that its so much easier getting your dopamine hit from YouTube, Reddit and the like than actually doing something productive.And you won’t actually get less dopamine, you will get it from something that is not wasting your time.\",308,\"2025-01-12 16:15:24.179065\",NA\n\"\",\"About how to use your device\",\"Your smartphone can be destructive if you use it for porn, social media and endless scrolling, but it can be an amazing tool if you use it for your business, learning, or other productive activities.\",312,\"2025-01-12 16:17:21.541885\",NA\n\"\",\"-strategy- remove the apps\",\"Your smartphone can be destructive if you use it for porn, social media and endless scrolling, but it can be an amazing tool if you use it for your business, learning, or other productive activities.I run most of my business from my smartphone, and couldn’t do it without it. Use the phone, but remove the apps that tempt you.\",312,\"2025-01-12 16:17:40.62738\",NA\n\"\",\"Lots of us spending too much time on Facebook and Instagram, wasting time\",\"Yeah I’m a 30 something working mom. I can guarantee you that there are lots of us spending too much time on Facebook and Instagram, wasting time, who would benefit from mindful media consumption and healthier eating and diet.\",336,\"2025-01-12 16:22:20.197844\",\"Noting the extract is saying not only men.\"\n\"\",\"Anything electronic destroys attention span\",\"Destroys your attention span just like anything else electronic\",357,\"2025-01-12 16:23:47.648992\",NA\n\"\",\"-strategy- replace reddit and youtube and phone with schoolwork and reading\",\"Putting down the phone, doing schoolwork and reading books instead of scrolling reddit or watching youtube will do you more good than an expensive course.\",359,\"2025-01-12 16:24:34.536101\",NA\n\"\",\"Pleasurable feeling scrolling through Instagram and Reddit, can not keep away from the phone.\",\"I broke my phone and decided not to get a replacement for 3 weeks.Thoroughly enjoyed those 3 weeks. Better mood, less anxiety, more productivity.After 3 weeks(2 days ago), got a new phone and immediately noticed a pleasurable feeling from endlessly scrolling through my Instagram and Reddit feed.I have not been able to keep myself away from my phone for the last 2 days.\",364,\"2025-01-12 16:26:03.662\",NA\n\"\",\"-strategy- forced boredom\",\"unless you've been stuck in a cycle of binge-watching porn, YouTube, etc. It's hard to understand how difficult some people find it to simply 'Go be productive'.The idea, therefore, is to try to have the occasional reset. To have a day of forced boredom as a practice of regaining some discipline, to spend time thinking about how you want to do things differently, absent of the distractions you would normally be enduring to stop that process.\",390,\"2025-01-12 16:33:16.21561\",NA\n\"\",\"Tap Reddit or Facebook app before you can even think\",\" The first is that you will almost inevitably use that phone for other things, your fingers (and mine as well) are programmed to tap that Reddit or Facebook app before you can even think.\",395,\"2025-01-12 16:34:03.185384\",NA\n\"\",\"Phone always in sight, taking up attention\",\"The mere presence of your phone also drags on your attention. It truly is like placing a bottle of beer within eyesight of an alcoholic and expecting them not to drink. Even if you keep yourself away from using your phone for distractions, its still weighing on your mind.\",395,\"2025-01-12 16:35:18.878096\",NA\n\"\",\"Youtube preventing delayed gratification from learning\",\"The purpose here is to enhance your focus so that your brain gets habituated with being satisfied with delayed gratification and learning do provide delayed gratification.But make sure to screen out lucrative contents on YouTube that might sabotage your detox\",422,\"2025-01-12 16:43:51.762391\",NA\n\"\",\"Not about attention exactly but immediate dopamine release to the digital tech\",\"I think “attention span” might not be quite the right angle to look at this. These technologies make people addicted to immediate dopamine release, and that lowers their overall resiliency, ability to withstand difficulty.\",455,\"2025-01-12 16:48:42.369583\",NA\n\"\",\"Video games trick into enjoying pointless achievements\",\"I love video games. Just everytime I sit there and think, as much as I’m enjoying this. It really is a massive waste of time. It hooks you into it by giving you rewards such as unlocking things, and levelling up. It tricks your brain into making you feel like you’ve achieved something. In reality you’ve achieved absolutely nothing!\",465,\"2025-01-12 16:59:57.857785\",NA\n\"\",\"Dopamine detoxing to cut down screen time\",\"I did the dopamine detox a few times already and the first time was hard and painful but then I started enjoying it. I was a massive addict to Instagram and YouTube with 6-7 hours of screen time a day.\",479,\"2025-01-12 17:01:55.393018\",NA\n\"\",\"Too attached to the phone, away from the kids\",\"I’m also female, and I’m in big need for a detox, but dreaded to. Trying to start soon with my husband, since we’re both too attached to the phone while our kids want our attention and we’re wasting time on the screen\",483,\"2025-01-12 17:02:27.366134\",NA\n\"\",\"-strategy- use web version of Instagram\",\"i uninstalled the app on instagram after using it too much, approximately 2-3 hours a day. Because i want to stay in touch with some people and friends, i used the web version. My usage time rapidly fall to max. 20minutes per day. Because of the mobile web version feels so clunky, i don‘t mess around that much with mindless scrolling.\",486,\"2025-01-12 17:02:57.259177\",NA\n","type":"text"}]
